# Server Configuration
server:
  port: 8080

# Database Configuration
spring:
  datasource:
    url: jdbc:mysql://${DB_HOST:34.64.82.86}:${DB_PORT:3306}/${DB_NAME:dnfp}?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:dfparty-root-password}
  
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: validate  # 운영환경에서는 validate, 개발환경에서는 update
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.MySQLDialect
    defer-datasource-initialization: false
  
  sql:
    init:
      mode: never  # MariaDB 초기화는 Helm 차트에서 담당
  
  web:
    cors:
      allowed-origins: http://localhost:5173
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
  
  devtools:
    restart:
      enabled: true
      quiet-period: 1s
      poll-interval: 2s
      trigger-file: .trigger
    livereload:
      enabled: true

# Environment-specific database configuration
---
spring:
  config:
    activate:
      on-profile: development
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/dnfp_dev?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:dfparty}
    password: ${DB_PASSWORD:dfparty-password}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

---
spring:
  config:
    activate:
      on-profile: production
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/dnfp_prod?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:dfparty}
    password: ${DB_PASSWORD:dfparty-password}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always

# Logging Configuration
logging:
  level:
    com.dfparty.backend: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# DFO API Configuration
df:
  api:
    key: ${DF_API_KEY:your_dfo_api_key_here}
    base-url: https://api.neople.co.kr/df
    rate-limit: 100
    rate-limit-window: 60000

# Mock Configuration
app:
  mock:
    enabled: false  # Mock 모드 활성화/비활성화
    server-url: http://localhost:8081  # Mock 서버 URL
    auto-save: true  # API 호출 시 응답 자동 저장
    data-path: ./mock-data  # Mock 데이터 저장 경로
    api-types:
      dfo: true  # DFO API Mock 사용 여부
      dundam: true  # Dundam API Mock 사용 여부

