# Server Configuration
server:
  port: 8080
  # SSE 연결 타임아웃 설정
  servlet:
    async:
      request-timeout: 300000  # 5분 (밀리초)
  # Tomcat 설정
  tomcat:
    threads:
      max: 200
      min-spare: 10
    connection-timeout: 300000  # 5분으로 증가
    max-connections: 8192
    # SSE 연결 유지를 위한 추가 설정
    max-http-form-post-size: 10MB

# Local Environment Database Configuration (default)
# Uses dnfp database for local development
spring:
  datasource:
    url: jdbc:mariadb://${DB_HOST:localhost}:${DB_PORT:3306}/dnfp?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    driver-class-name: org.mariadb.jdbc.Driver
    username: ${DB_USERNAME:dfparty}
    password: ${DB_PASSWORD:dfparty-password}
  
  jpa:
    database-platform: org.hibernate.dialect.MariaDBDialect
    hibernate:
      ddl-auto: validate  # 기본값: validate (DB 수정 금지)
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.MariaDBDialect
    defer-datasource-initialization: false
  
  sql:
    init:
      mode: never  # MariaDB 초기화는 Helm 차트에서 담당
  
  web:
    cors:
      allowed-origins: http://localhost:5173
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
      allow-credentials: false
  
  devtools:
    restart:
      enabled: true
      quiet-period: 1s
      poll-interval: 2s
      trigger-file: .trigger
    livereload:
      enabled: true

# Development DFO API settings
df:
  api:
    base-url: https://api.neople.co.kr/df
    key: ${DF_API_KEY:your_dfo_api_key_here}
    rate-limit: 100
    rate-limit-window: 60000

# Playwright 설정
playwright:
  headless: true
  browser:
    type: chromium
  skip-browser-download: false
  browsers-path: /ms-playwright
  chromium-executable-path: /usr/bin/chromium-browser

# Development Environment Profile
---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/dnfp_dev?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:dfparty}
    password: ${DB_PASSWORD:dfparty-password}
  jpa:
    hibernate:
      ddl-auto: validate  # 개발환경에서도 DB 수정 금지
    show-sql: true

# Local Environment Profile
---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/dnfp?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:dfparty}
    password: ${DB_PASSWORD:dfparty-password}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
  # Local 환경에서는 던담 동기화 비활성화
  dundam:
    scheduler:
      enabled: false
    crawling:
      enabled: false
    sync:
      enabled: false

# Logging configuration
logging:
  level:
    com.dfparty.backend.service.DundamService: DEBUG  # 던담 서비스 상세 로그
    com.dfparty.backend.service.CharacterService: DEBUG  # 캐릭터 서비스 상세 로그
    org.springframework.web: INFO
    org.hibernate: INFO

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always


