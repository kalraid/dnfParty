version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: ./df-party-frontend
      dockerfile: Dockerfile
    container_name: dfo-party-frontend
    ports:
      - "3000:80"
    volumes:
      - shared-data:/app/shared-data
    depends_on:
      - nginx
    networks:
      - dfo-network
    restart: unless-stopped

  # Main Backend Service
  backend:
    build:
      context: ./df-party-backend
      dockerfile: Dockerfile
    container_name: dfo-party-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DF_API_KEY=${DF_API_KEY:-your_dfo_api_key_here}
    volumes:
      - shared-data:/app/shared-data
    networks:
      - dfo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Mock Backend Service
  mock-backend:
    build:
      context: ./df-party-mock
      dockerfile: Dockerfile
    container_name: dfo-party-mock
    ports:
      - "8081:8081"
    volumes:
      - shared-data:/app/shared-data
    networks:
      - dfo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: dfo-party-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - shared-data:/var/shared-data
    depends_on:
      - frontend
      - backend
      - mock-backend
    networks:
      - dfo-network
    restart: unless-stopped

volumes:
  shared-data:
    driver: local

networks:
  dfo-network:
    driver: bridge
