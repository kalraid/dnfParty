replicaCount: 1

# DFO API Configuration
dfoApiKey: ""

image:
  repository: kimrie92/dfo-party-backend
  tag: latest
  pullPolicy: Always

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000
  runAsGroup: 1000
  runAsUser: 1000

securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  capabilities:
    drop:
      - ALL

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

env:
  - name: SPRING_PROFILES_ACTIVE
    value: "kubernetes"
  - name: DF_API_KEY
    valueFrom:
      secretKeyRef:
        name: dfo-api-secret
        key: api-key
  - name: DF_API_BASE_URL
    value: "https://api.neople.co.kr/df"
  - name: DF_API_RATE_LIMIT
    value: "100"
  - name: DF_API_RATE_LIMIT_WINDOW
    value: "3600000"
  # Database Configuration - Root 계정으로 접속
  - name: DB_HOST
    value: "df-party-infrastructure-mariadb"
  - name: DB_PORT
    value: "3306"
  - name: DB_NAME
    value: "dnfp"
  - name: DB_USERNAME
    value: "root"
  - name: DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: "mariadb-secret"
        key: mariadb-root-password
  - name: SHOW_SQL
    value: "false"
  # Playwright Configuration for Kubernetes
  - name: PLAYWRIGHT_BROWSERS_PATH
    value: "/ms-playwright"
  - name: PLAYWRIGHT_CACHE_DIR
    value: "/tmp/.playwright"
  # JVM Memory Configuration - OOM 방지
  - name: JAVA_OPTS
    value: "-Xms512m -Xmx1g -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseStringDeduplication -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp"
  - name: GRADLE_OPTS
    value: "-Xmx2g -XX:MaxMetaspaceSize=512m"

# Init Container - 실제 MySQL 연결 확인
initContainers:
  - name: wait-for-mariadb
    image: mysql:8.0
    command:
      - sh
      - -c
      - |
        echo "Waiting for MariaDB to be ready..."
        until mysql -h df-party-infrastructure-mariadb -P 3306 -u root -p'dfparty-root-password' -e "SELECT 1;" > /dev/null 2>&1; do
          echo "MariaDB not ready yet, waiting..."
          sleep 5
        done
        echo "MariaDB is ready!"
    env:
      - name: MYSQL_PWD
        value: "dfparty-root-password"
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 64Mi

resources:
  limits:
    cpu: 2000m
    memory: 2Gi
  requests:
    cpu: 1000m
    memory: 1Gi

# Health Check 설정 - HTTP probe로 변경
livenessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 1
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


