# Application values for DFO Party
# This chart manages Backend and Frontend which are frequently updated

# Global settings
global:
  environment: production
  domain: www.dnfpartyhelper.xyz

# Backend Configuration
backend:
  enabled: true
  replicaCount: 1
  
  # DFO API Configuration
  dfoApiKey: ""
  
  # Spring Profile Configuration
  springProfilesActive: "production"
  
  image:
    repository: kimrie92/dfo-party-backend
    tag: latest
    pullPolicy: Always
  
  service:
    type: ClusterIP
    port: 8080
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  
  # Health check configuration
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  # Init container for waiting MariaDB
  initContainers:
    - name: wait-for-mariadb
      image: busybox:1.35
      command: ['sh', '-c', 'until nc -z df-party-infrastructure-mariadb 3306; do echo waiting for mariadb; sleep 2; done;']

# Frontend Configuration
frontend:
  enabled: true
  replicaCount: 1
  
  image:
    repository: kimrie92/dfo-party-frontend
    tag: "latest"
    pullPolicy: Always
  
  service:
    type: ClusterIP
    port: 80
  
  # Environment variables for frontend
  env:
    VITE_API_BASE_URL: "https://www.dnfpartyhelper.xyz/api"
    VITE_WS_BASE_URL: "wss://www.dnfpartyhelper.xyz"
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
